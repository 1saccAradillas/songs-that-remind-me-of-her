import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";

const songsList = [
  { id: 1, title: "Song 1", url: "https://www.youtube.com/embed/dQw4w9WgXcQ" },
  { id: 2, title: "Song 2", url: "https://www.youtube.com/embed/3JZ_D3ELwOQ" },
];

export default function MusicMemories() {
  const [songs, setSongs] = useState(songsList);
  const [admin, setAdmin] = useState(false);
  const [newSong, setNewSong] = useState({ title: "", url: "" });
  const [password, setPassword] = useState("");
  
  const handleLogin = () => {
    if (password === "admin123") setAdmin(true);
    else alert("Wrong password");
  };

  const addSong = () => {
    if (newSong.title && newSong.url.includes("youtube.com")) {
      setSongs([...songs, { id: Date.now(), ...newSong }]);
      setNewSong({ title: "", url: "" });
    }
  };

  const removeSong = (id) => {
    setSongs(songs.filter(song => song.id !== id));
  };

  return (
    <div className="p-4 max-w-3xl mx-auto text-center">
      <h1 className="text-2xl font-bold">Songs That Remind Me of Her</h1>
      {songs.map(song => (
        <Card key={song.id} className="m-4">
          <CardContent>
            <h2 className="text-lg font-semibold">{song.title}</h2>
            <iframe 
              width="100%" 
              height="200" 
              src={song.url} 
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
            ></iframe>
            {admin && <Button onClick={() => removeSong(song.id)} className="mt-2">Remove</Button>}
          </CardContent>
        </Card>
      ))}
      {!admin && (
        <div className="mt-4">
          <Input type="password" placeholder="Admin Password" value={password} onChange={(e) => setPassword(e.target.value)} />
          <Button onClick={handleLogin} className="mt-2">Login</Button>
        </div>
      )}
      {admin && (
        <div className="mt-4">
          <Input placeholder="Song Title" value={newSong.title} onChange={(e) => setNewSong({ ...newSong, title: e.target.value })} />
          <Input placeholder="YouTube Link" value={newSong.url} onChange={(e) => setNewSong({ ...newSong, url: e.target.value })} />
          <Button onClick={addSong} className="mt-2">Add Song</Button>
        </div>
      )}
    </div>
  );
}

export const nextConfig = {
  async headers() {
    return [
      {
        source: "/(.*)",
        headers: [
          {
            key: "Content-Security-Policy",
            value:
              "frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; default-src 'self';",
          },
        ],
      },
    ];
  },
};
